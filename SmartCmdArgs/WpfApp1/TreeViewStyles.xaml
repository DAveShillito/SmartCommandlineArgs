<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                    xmlns:local="clr-namespace:WpfApp1">

    <!-- https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/treeview-styles-and-templates -->

    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Collapsed"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="1,1,4,1"
                                Data="M 4 0 L 8 4 L 4 8 Z">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Expanded"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="1,1,4,1"
                                Data="M 0 4 L 8 4 L 4 8 Z"
                                Visibility="Hidden">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource GlyphColor}" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ItemBaseStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <Border x:Name="ItemBorder"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True"
                                />
                        <Grid Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={local:TreeLevelMarginConverter Ident=8}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            
                            <ToggleButton x:Name="Expander" 
                                            Grid.Column="0" Grid.Row="0"
                                            ClickMode="Press"
                                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{StaticResource ExpandCollapseToggleStyle}"
                                            Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={local:TreeLevelMarginConverter Ident=-8}}"
                                            />
                            <Border x:Name="HeaderBorder" 
                                    Grid.Column="1" Grid.Row="0" 
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" 
                                                    ContentSource="Header" HorizontalAlignment="Stretch" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <!--<Trigger Property="IsSelected" Value="true">-->
                        <Trigger Property="local:TreeViewEx.IsItemSelected" Value="true">
                            <Setter Property="Background" TargetName="ItemBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!--<Condition Property="IsSelected" Value="true"/>-->
                                <Condition Property="local:TreeViewEx.IsItemSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ItemBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ProjectItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource ItemBaseStyle}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background" Value="Coral" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0,0.5,0,0.5" />
    </Style>

    <Style x:Key="GroupItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource ItemBaseStyle}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background" Value="ForestGreen" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0,0.5,0,0.5" />
    </Style>

    <Style x:Key="ArgumentItemStyle" TargetType="TreeViewItem" BasedOn="{StaticResource ItemBaseStyle}">
        <Setter Property="Background" Value="SkyBlue" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="0,0.5,0,0.5" />        
    </Style>

    <HierarchicalDataTemplate x:Key="ProjectDataTemplate" DataType="{x:Type local:CmdProject}" ItemsSource="{Binding Items}">
        <local:ArgumentItemView DataContext="{Binding}" 
                                FontWeight="{Binding IsStartupProject, Converter={local:BooleanBoldFontConverter}}"/>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="GroupDataTemplate" DataType="{x:Type local:CmdGroup}" ItemsSource="{Binding Items}">
        <local:ArgumentItemView DataContext="{Binding}" />
    </HierarchicalDataTemplate>

    <DataTemplate x:Key="ArgumentDataTemplate" DataType="{x:Type local:CmdArgument}">
        <local:ArgumentItemView DataContext="{Binding}" />
    </DataTemplate>

</ResourceDictionary>